@model HeaderLinksModel
@using System.Text.Encodings.Web

<div class="header-centering">
    @if (Model.ShoppingCartEnabled)
    {
        <div class="shopping-cart-link">
            <div id="topcartlink">
                <a href="@Url.RouteUrl("ShoppingCart")" class="ico-cart">
                    <span class="cart-label">@T("ShoppingCart")</span>
                    <span class="cart-qty">@T("ShoppingCart.HeaderQuantity", Model.ShoppingCartItems)</span>
                </a>
            </div>
        <script type="text/javascript" asp-location="Footer">
                $(document).ready(function () {
                    $('.header').on('mouseenter', '#topcartlink', function () {
                        $('#flyout-cart').addClass('active');
                    });
                    $('.header').on('mouseleave', '#topcartlink', function () {
                        $('#flyout-cart').removeClass('active');
                    });
                    $('.header').on('mouseenter', '#flyout-cart', function () {
                        $('#flyout-cart').addClass('active');
                    });
                    $('.header').on('mouseleave', '#flyout-cart', function () {
                        $('#flyout-cart').removeClass('active');
                    });
                });
            </script>
            @await Component.InvokeAsync("FlyoutShoppingCart")
        </div>
    }

    <div class="header-links-wrapper">
        <div class="header-links">
            <ul>
                @await Component.InvokeAsync("Widget", new { widgetZone = "header_links_before" })
                @if (Model.IsAuthenticated)
                {
			<li><a href="@Url.RouteUrl("CustomerInfo")" class="ico-account">@T("Account.MyAccount")@*@Model.CustomerName*@</a></li>
	                <li><a href="@Url.RouteUrl("Logout")" class="ico-logout">@T("Account.Logout")</a></li>
                }
                else
                {
                    <li><a href="@Url.RouteUrl("Register")" class="ico-register">@T("Account.Register")</a></li>
                    <li><a href="@Url.RouteUrl("Login")" class="ico-login">@T("Account.Login")</a></li>
                }
                @if (Model.AllowPrivateMessages)
                {
                    <li><a href="@Url.RouteUrl("PrivateMessages", new { tab = "" })" class="ico-inbox">@T("PrivateMessages.Inbox")</a>
                        @Model.UnreadPrivateMessages</li>
                    if (!string.IsNullOrEmpty(Model.AlertMessage))
                    {
                    <script type="text/javascript" asp-location="Footer">
                        $(document).ready(function () {
                            displayPopupNotification('@Html.Raw(JavaScriptEncoder.Default.Encode(Model.AlertMessage))', 'success', false);
                        });
                    </script>
                    }
                }
                @if (Model.WishlistEnabled)
                {
                    <li>
                        <a href="@Url.RouteUrl("Wishlist")" class="ico-wishlist">
                            <span class="wishlist-label">@T("Wishlist")</span>
                            <span class="wishlist-qty">@T("Wishlist.HeaderQuantity", Model.WishlistItems)</span>
                        </a>
                    </li>
                }
                @await Component.InvokeAsync("Widget", new { widgetZone = "header_links_after"})
            </ul>
        </div>
    </div>
    <div class="header-selectors-wrapper">
        @await Component.InvokeAsync("TaxTypeSelector")
        @await Component.InvokeAsync("CurrencySelector")
        @await Component.InvokeAsync("LanguageSelector")
        @await Component.InvokeAsync("Widget", new { widgetZone = "header_selectors"})
    </div>
</div>
