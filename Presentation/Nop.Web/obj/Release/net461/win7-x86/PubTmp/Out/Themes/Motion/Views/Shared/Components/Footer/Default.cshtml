@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Services.Configuration

@inject IStoreContext storeContext
@inject IWorkContext workContext
@inject ISettingService settingService

@model FooterModel

@{
    var storeId = storeContext.CurrentStore.Id;
    var removeDesignedBy = settingService.GetSettingByKey("motionthemesettings.removedesignedby", false, storeId, true);
    var removeCopyright = settingService.GetSettingByKey("motionthemesettings.removecopyright", false, storeId, true);
}

<div class="footer">
    <div class="footer-top">
        <div class="footer-centering">
            <div class="footer-block footer-block-first">
                <h3>@T("SevenSpikes.Themes.Motion.Common.Contact")</h3>
                <ul class="footer-menu">
                    <li class="phone">@T("SevenSpikes.Themes.Motion.Common.Phone")</li>
                    <li class="adress">@T("SevenSpikes.Themes.Motion.Common.Adress")</li>
                </ul>
            </div>
            <div class="footer-block">@await Component.InvokeAsync("TopicBlock", new { systemName = "HomePageText" })</div>
            <div class="footer-block social-sharing">
                <h3>@T("SevenSpikes.Themes.Motion.Common.Social")</h3>
                @await Component.InvokeAsync("SocialButtons")
            </div>
            <div class="footer-block subscribe-to-newsletter">
                @await Component.InvokeAsync("NewsletterBox")
            </div>
        </div>
    </div>
    <div class="footer-middle">
        <div class="footer-centering">
            <div class="footer-block footer-block-first">
                <h3>@T("SevenSpikes.Themes.Motion.Common.CompanyInfo")</h3>
                <ul class="footer-menu">
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                    }
                </ul>
            </div>
            <div class="footer-block">
                <h3>@T("SevenSpikes.Themes.Motion.Common.CustomerServices")</h3>
                <ul class="footer-menu">
                    <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a> </li>
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                    }
                    @if (Model.SitemapEnabled)
                    {
                        <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                    }
                </ul>
            </div>
            <div class="footer-block">
                <h3>@T("Account.MyAccount")</h3>
                <ul class="footer-menu">
                    <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.CustomerInfo")</a></li>
                    <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                    <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                    @if (Model.WishlistEnabled)
                    {
                        <li><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
                    }
                    @if (Model.AllowCustomersToApplyForVendorAccount)
                    {
                        <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                    }
                </ul>
            </div>
            <div class="footer-block">
                <h3>@T("SevenSpikes.Themes.Motion.Common.OurOffers")</h3>
                <ul class="footer-menu">
                    <li><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
                    <li><a href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li>
                    <li><a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
                    <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="footer-bottom">
        <div class="footer-centering">
            <div class="accepted-payment-methods">
                <ul>
                    <li class="method1"></li>
                    <li class="method2"></li>
                    <li class="method3"></li>
                    <li class="method4"></li>
                    <li class="method5"></li>
                </ul>
            </div>
            <div class="footer-disclaimer">
                @T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)
            </div>
            @if (!removeDesignedBy)
            {
                <div class="footer-powered-by">
                    Développé par © iClic, créateur de succès Internet - Tous droits réservés
                </div>
            }
            @if (!Model.HidePoweredByNopCommerce)
            {
                <div class="footer-powered-by">
                    Powered by <a href="http://www.nopcommerce.com/">nopCommerce</a>
                </div>
            }

            @if (Model.DisplayTaxShippingInfoFooter)
            {
                var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                <span class="footer-tax-shipping">
                    @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("shippinginfo")}))
                </span>
            }
            <div class="footer-store-theme">
        	@await Component.InvokeAsync("StoreThemeSelector")
            </div>
    	    @await Component.InvokeAsync("Widget", new { widgetZone = "footer" })
        </div>
    </div>
</div>
