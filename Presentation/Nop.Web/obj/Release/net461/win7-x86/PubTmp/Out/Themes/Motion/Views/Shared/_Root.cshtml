@{
    Layout = "_Root.Head";
}

@{
    var controllerName = Url.ActionContext.RouteData.Values["controller"].ToString();
    var isHomePage = controllerName.Equals("home", StringComparison.InvariantCultureIgnoreCase);
}

@await Component.InvokeAsync("Widget", new { widgetZone = "body_start_html_tag_after" })
@await Html.PartialAsync("_Notifications")
@await Html.PartialAsync("_JavaScriptDisabledWarning")
@await Html.PartialAsync("_OldInternetExplorerWarning")
@await Component.InvokeAsync("AdminHeaderLinks")
@await Html.PartialAsync("_Header")
<div class="overlayOffCanvas"></div>
<div class="responsive-nav-wrapper-parent">
    <div class="responsive-nav-wrapper">
        <div class="menu-title">
            <span>@T("SevenSpikes.Themes.Common.MenuTitle")</span>
        </div>
        <div class="search-wrap">
            <span>@T("Search")</span>
            <div class="search-box store-search-box">
                @await Component.InvokeAsync("SearchBox")
            </div>
        </div>
        <div class="filters-button">
            <span>@T("SevenSpikes.Themes.Common.Filters")</span>
        </div>
    </div>
</div>
<div class="justAFixingDivBefore"></div>
<div class="header-menu">
    <div class="close-menu">
        <span>@T("SevenSpikes.Themes.Common.CloseMenu")</span>
    </div>
        @{
            var menu = await Component.InvokeAsync("Widget", new { widgetZone = "theme_header_menu" });
            var topMenu = (await Component.InvokeAsync("TopMenu")).ToHtmlString();
        }
            @if (String.IsNullOrEmpty(menu.ToHtmlString()))
            {
                @Html.Raw(topMenu)
            }
            else
            { 
                @menu 
            }
</div>
@if (isHomePage)
{
        @await Component.InvokeAsync("Widget", new { widgetZone = "home_page_main_slider"});
}
<div class="master-wrapper-page">
    @await Html.PartialAsync("_JavaScriptDisabledWarning")
    <div class="master-wrapper-content">
        <script type="text/javascript" asp-location="Footer">
            AjaxCart.init(false, '.shopping-cart-link .cart-qty', '.header-links .wishlist-qty', '#flyout-cart');
        </script>
        @await Component.InvokeAsync("Widget", new { widgetZone = "content_before" })
        @*ajax loading window*@
        <div class="ajax-loading-block-window" style="display: none">
            <div class="loading-image">
            </div>
        </div>
        <div class="master-column-wrapper">
            @RenderBody()
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = "content_after" })
    </div>
</div>
@await Component.InvokeAsync("Footer")
@await Component.InvokeAsync("EuCookieLaw")
@await Component.InvokeAsync("Widget", new { widgetZone = "body_end_html_tag_before" })
